# .github/workflows/reusable-docker-push-dh.yml
# 목적: 빌드된 Docker 이미지를 Docker Hub로 조건부 푸시합니다.
name: Reusable - Push Docker Image to Docker Hub (Conditional)

on:
  workflow_call:
    inputs:
      # Docker Hub 리포지토리 전체 이름 (예: username/reponame)
      dockerhub_repo_name:
        required: true
        type: string
      image_tag_sha: { required: true, type: string }
      image_tag_latest: { required: true, type: string }
      local_image_tag_built: { required: true, type: string }
      image_digest_built: { required: true, type: string }
    secrets:
      # Docker Hub 로그인 정보
      dockerhub_username: { required: true }
      dockerhub_token: { required: true }

jobs:
  push_dh_job:
    name: Check Digest and Push to Docker Hub
    runs-on: ubuntu-latest
    steps:
      # 1. Docker Hub 로그인
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.dockerhub_username }}
          password: ${{ secrets.dockerhub_token }}

      # 2. Docker Hub의 :latest 태그 다이제스트 조회 (오류 무시)
      - name: Get Docker Hub :latest image digest
        id: get-latest-digest-dh
        run: |
          DH_USER_LC=$(echo "${{ secrets.dockerhub_username }}" | tr '[:upper:]' '[:lower:]')
          DH_REPO_LC=$(echo "${{ inputs.dockerhub_repo_name }}" | tr '[:upper:]' '[:lower:]')
          DH_IMAGE_LATEST="${DH_USER_LC}/${DH_REPO_LC}:latest"
          echo "Checking digest for Docker Hub image: $DH_IMAGE_LATEST"
          LATEST_DIGEST=$(docker manifest inspect $DH_IMAGE_LATEST --verbose 2>/dev/null | jq -r '.Descriptor.digest // ""' || echo "")
          echo "Current :latest digest in Docker Hub: $LATEST_DIGEST"
          echo "latest_digest=$LATEST_DIGEST" >> $GITHUB_OUTPUT
        shell: bash

      # 3. 다이제스트 비교 및 푸시 결정
      - name: Check digests and set push flag
        id: check-push-dh
        run: |
          BUILT_DIGEST="${{ inputs.image_digest_built }}"
          LATEST_DIGEST="${{ steps.get-latest-digest-dh.outputs.latest_digest }}"
          echo "Built Digest: $BUILT_DIGEST"
          echo "Latest Digest: $LATEST_DIGEST"
          if [ "$BUILT_DIGEST" != "$LATEST_DIGEST" ] || [ -z "$LATEST_DIGEST" ]; then
            echo "Digests differ or :latest not found. Push required."
            echo "push_required=true" >> $GITHUB_OUTPUT
          else
            echo "Digests match. No push required."
            echo "push_required=false" >> $GITHUB_OUTPUT
          fi
        shell: bash

      # 4. 태그 지정 및 푸시 (조건부 실행)
      - name: Tag and Push image to Docker Hub
        if: steps.check-push-dh.outputs.push_required == 'true'
        env:
          DH_USER_LC: $(echo "${{ secrets.dockerhub_username }}" | tr '[:upper:]' '[:lower:]')
          DH_REPO_LC: $(echo "${{ inputs.dockerhub_repo_name }}" | tr '[:upper:]' '[:lower:]')
          DH_IMAGE_BASE: "${DH_USER_LC}/${DH_REPO_LC}"
          TAG_SHA: ${{ inputs.image_tag_sha }}
          TAG_LATEST: ${{ inputs.image_tag_latest }}
          LOCAL_IMAGE: ${{ inputs.local_image_tag_built }}
        run: |
          echo "Tagging $LOCAL_IMAGE -> $DH_IMAGE_BASE:$TAG_SHA and $DH_IMAGE_BASE:$TAG_LATEST"
          docker tag $LOCAL_IMAGE $DH_IMAGE_BASE:$TAG_SHA
          docker tag $LOCAL_IMAGE $DH_IMAGE_BASE:$TAG_LATEST

          echo "Pushing $DH_IMAGE_BASE:$TAG_SHA"
          docker push $DH_IMAGE_BASE:$TAG_SHA

          echo "Pushing $DH_IMAGE_BASE:$TAG_LATEST"
          docker push $DH_IMAGE_BASE:$TAG_LATEST
        shell: bash

      # 5. 푸시 건너뛰기 메시지 (조건부 실행)
      - name: Image push skipped
        if: steps.check-push-dh.outputs.push_required == 'false'
        run: echo "Image content has not changed. Skipping Docker Hub push."
        shell: bash
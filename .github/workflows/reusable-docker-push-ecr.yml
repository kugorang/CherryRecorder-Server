# .github/workflows/reusable-docker-push-ecr.yml
# 목적: 빌드된 Docker 이미지를 AWS ECR로 푸시합니다. OIDC로 인증합니다.
name: Reusable - Push Docker Image to ECR

on:
  workflow_call:
    inputs:
      image_name_ecr: { required: true, type: string }
      image_tag_sha: { required: true, type: string }
      image_tag_latest: { required: true, type: string }
      aws_region: { required: true, type: string }
      ghcr_image_uri: { required: true, type: string }
    secrets:
      aws_role_to_assume: { required: true }

jobs:
  push_ecr_job:
    name: Push Image to AWS ECR
    runs-on: ubuntu-latest
    permissions:
      id-token: write # OIDC 필수 권한
      packages: read

    steps:
      # GitHub 컨테이너 레지스트리 로그인
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
      
      # GHCR에서 이미지 가져오기
      - name: Pull image from GHCR
        run: |
          # 리포지토리 이름을 소문자로 변환
          REPO_NAME="${{ github.repository },,}"

          GHCR_IMAGE="ghcr.io/$REPO_NAME-build-cache:$IMAGE_TAG"
          docker pull $GHCR_IMAGE

      # 1. AWS 자격 증명 설정 (OIDC)
      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.aws_role_to_assume }}
          aws-region: ${{ inputs.aws_region }}
          role-session-name: GitHubActions-ECR-Push-${{ github.run_id }}

      # 2. ECR 로그인
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
        
      # 3. Docker 이미지 푸시 (두 태그 모두)
      - name: Push Docker image to Amazon ECR
        env:
          ECR_IMAGE_NAME: ${{ inputs.image_name_ecr }}
          IMAGE_TAG_SHA: ${{ inputs.image_tag_sha }}
          IMAGE_TAG_LATEST: ${{ inputs.image_tag_latest }}
          GHCR_IMAGE: ${{ inputs.ghcr_image_uri }}
        run: |
          set -e # 명령어 실패 시 중단
          docker tag $GHCR_IMAGE $ECR_IMAGE_NAME:$IMAGE_TAG_SHA
          docker tag $GHCR_IMAGE $ECR_IMAGE_NAME:$IMAGE_TAG_LATEST
          echo "Pushing image: $ECR_IMAGE_NAME:$IMAGE_TAG_SHA"
          docker push $ECR_IMAGE_NAME:$IMAGE_TAG_SHA
          echo "Pushing image: $ECR_IMAGE_NAME:$IMAGE_TAG_LATEST"
          docker push $ECR_IMAGE_NAME:$IMAGE_TAG_LATEST